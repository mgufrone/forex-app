// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.8
// source: rate.proto

package rate_service

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   int64      `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Filter *RateQuery `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *DateFilter) Reset() {
	*x = DateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateFilter) ProtoMessage() {}

func (x *DateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateFilter.ProtoReflect.Descriptor instead.
func (*DateFilter) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{0}
}

func (x *DateFilter) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *DateFilter) GetFilter() *RateQuery {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SpanFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Span   int32      `protobuf:"varint,1,opt,name=span,proto3" json:"span,omitempty"`
	Start  int64      `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End    int64      `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	Filter *RateQuery `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SpanFilter) Reset() {
	*x = SpanFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpanFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanFilter) ProtoMessage() {}

func (x *SpanFilter) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanFilter.ProtoReflect.Descriptor instead.
func (*SpanFilter) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{1}
}

func (x *SpanFilter) GetSpan() int32 {
	if x != nil {
		return x.Span
	}
	return 0
}

func (x *SpanFilter) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SpanFilter) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *SpanFilter) GetFilter() *RateQuery {
	if x != nil {
		return x.Filter
	}
	return nil
}

type RateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *RateResult) Reset() {
	*x = RateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateResult) ProtoMessage() {}

func (x *RateResult) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateResult.ProtoReflect.Descriptor instead.
func (*RateResult) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{2}
}

func (x *RateResult) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RateCountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RateCountResult) Reset() {
	*x = RateCountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateCountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateCountResult) ProtoMessage() {}

func (x *RateCountResult) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateCountResult.ProtoReflect.Descriptor instead.
func (*RateCountResult) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{3}
}

func (x *RateCountResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RateCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*Rate `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RateCount) Reset() {
	*x = RateCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateCount) ProtoMessage() {}

func (x *RateCount) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateCount.ProtoReflect.Descriptor instead.
func (*RateCount) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{4}
}

func (x *RateCount) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RateCount) GetData() []*Rate {
	if x != nil {
		return x.Data
	}
	return nil
}

type RateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Rate `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RateData) Reset() {
	*x = RateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateData) ProtoMessage() {}

func (x *RateData) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateData.ProtoReflect.Descriptor instead.
func (*RateData) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{5}
}

func (x *RateData) GetData() []*Rate {
	if x != nil {
		return x.Data
	}
	return nil
}

type RateQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string       `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Operator int32        `protobuf:"varint,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Value    *anypb.Any   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	And      []*RateQuery `protobuf:"bytes,4,rep,name=and,proto3" json:"and,omitempty"`
	Or       []*RateQuery `protobuf:"bytes,5,rep,name=or,proto3" json:"or,omitempty"`
}

func (x *RateQuery) Reset() {
	*x = RateQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateQuery) ProtoMessage() {}

func (x *RateQuery) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateQuery.ProtoReflect.Descriptor instead.
func (*RateQuery) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{6}
}

func (x *RateQuery) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *RateQuery) GetOperator() int32 {
	if x != nil {
		return x.Operator
	}
	return 0
}

func (x *RateQuery) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RateQuery) GetAnd() []*RateQuery {
	if x != nil {
		return x.And
	}
	return nil
}

func (x *RateQuery) GetOr() []*RateQuery {
	if x != nil {
		return x.Or
	}
	return nil
}

type RateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerPage int32        `protobuf:"varint,1,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Page    int32        `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort    string       `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	SortBy  string       `protobuf:"bytes,4,opt,name=sortBy,proto3" json:"sortBy,omitempty"`
	Group   []string     `protobuf:"bytes,5,rep,name=group,proto3" json:"group,omitempty"`
	Select  []string     `protobuf:"bytes,6,rep,name=select,proto3" json:"select,omitempty"`
	Query   []*RateQuery `protobuf:"bytes,7,rep,name=query,proto3" json:"query,omitempty"`
}

func (x *RateFilter) Reset() {
	*x = RateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateFilter) ProtoMessage() {}

func (x *RateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateFilter.ProtoReflect.Descriptor instead.
func (*RateFilter) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{7}
}

func (x *RateFilter) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *RateFilter) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RateFilter) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *RateFilter) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *RateFilter) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *RateFilter) GetSelect() []string {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *RateFilter) GetQuery() []*RateQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type Rate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Base       string  `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	Symbol     string  `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Source     string  `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	SourceType string  `protobuf:"bytes,5,opt,name=sourceType,proto3" json:"sourceType,omitempty"`
	Sell       float64 `protobuf:"fixed64,6,opt,name=sell,proto3" json:"sell,omitempty"`
	Buy        float64 `protobuf:"fixed64,7,opt,name=buy,proto3" json:"buy,omitempty"`
	UpdatedAt  int64   `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Rate) Reset() {
	*x = Rate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rate) ProtoMessage() {}

func (x *Rate) ProtoReflect() protoreflect.Message {
	mi := &file_rate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rate.ProtoReflect.Descriptor instead.
func (*Rate) Descriptor() ([]byte, []int) {
	return file_rate_proto_rawDescGZIP(), []int{8}
}

func (x *Rate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rate) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *Rate) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Rate) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Rate) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *Rate) GetSell() float64 {
	if x != nil {
		return x.Sell
	}
	return 0
}

func (x *Rate) GetBuy() float64 {
	if x != nil {
		return x.Buy
	}
	return 0
}

func (x *Rate) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_rate_proto protoreflect.FileDescriptor

var file_rate_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4c, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x74,
	0x0a, 0x0a, 0x53, 0x70, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x70, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x70, 0x61, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x1c, 0x0a, 0x0a, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x27, 0x0a, 0x0f, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x44, 0x0a, 0x09, 0x52,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x2d, 0x0a, 0x08, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb3, 0x01, 0x0a, 0x09, 0x52, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x03,
	0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x03, 0x61,
	0x6e, 0x64, 0x12, 0x22, 0x0a, 0x02, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x02, 0x6f, 0x72, 0x22, 0xbe, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x28, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xbe, 0x01, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x62, 0x75, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xa2, 0x03, 0x0a, 0x0b, 0x52, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x06, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a,
	0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61,
	0x74, 0x65, 0x1a, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74,
	0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x0d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x47, 0x0a,
	0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x67, 0x75, 0x66, 0x72, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x10, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0e, 0x2e, 0x3b, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rate_proto_rawDescOnce sync.Once
	file_rate_proto_rawDescData = file_rate_proto_rawDesc
)

func file_rate_proto_rawDescGZIP() []byte {
	file_rate_proto_rawDescOnce.Do(func() {
		file_rate_proto_rawDescData = protoimpl.X.CompressGZIP(file_rate_proto_rawDescData)
	})
	return file_rate_proto_rawDescData
}

var file_rate_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rate_proto_goTypes = []interface{}{
	(*DateFilter)(nil),      // 0: service.DateFilter
	(*SpanFilter)(nil),      // 1: service.SpanFilter
	(*RateResult)(nil),      // 2: service.RateResult
	(*RateCountResult)(nil), // 3: service.RateCountResult
	(*RateCount)(nil),       // 4: service.RateCount
	(*RateData)(nil),        // 5: service.RateData
	(*RateQuery)(nil),       // 6: service.RateQuery
	(*RateFilter)(nil),      // 7: service.RateFilter
	(*Rate)(nil),            // 8: service.Rate
	(*anypb.Any)(nil),       // 9: google.protobuf.Any
}
var file_rate_proto_depIdxs = []int32{
	6,  // 0: service.DateFilter.filter:type_name -> service.RateQuery
	6,  // 1: service.SpanFilter.filter:type_name -> service.RateQuery
	8,  // 2: service.RateCount.data:type_name -> service.Rate
	8,  // 3: service.RateData.data:type_name -> service.Rate
	9,  // 4: service.RateQuery.value:type_name -> google.protobuf.Any
	6,  // 5: service.RateQuery.and:type_name -> service.RateQuery
	6,  // 6: service.RateQuery.or:type_name -> service.RateQuery
	6,  // 7: service.RateFilter.query:type_name -> service.RateQuery
	7,  // 8: service.RateService.GetAll:input_type -> service.RateFilter
	7,  // 9: service.RateService.Count:input_type -> service.RateFilter
	7,  // 10: service.RateService.GetAndCount:input_type -> service.RateFilter
	0,  // 11: service.RateService.Latest:input_type -> service.DateFilter
	1,  // 12: service.RateService.History:input_type -> service.SpanFilter
	8,  // 13: service.RateService.Create:input_type -> service.Rate
	8,  // 14: service.RateService.Update:input_type -> service.Rate
	8,  // 15: service.RateService.Delete:input_type -> service.Rate
	5,  // 16: service.RateService.GetAll:output_type -> service.RateData
	3,  // 17: service.RateService.Count:output_type -> service.RateCountResult
	4,  // 18: service.RateService.GetAndCount:output_type -> service.RateCount
	5,  // 19: service.RateService.Latest:output_type -> service.RateData
	5,  // 20: service.RateService.History:output_type -> service.RateData
	8,  // 21: service.RateService.Create:output_type -> service.Rate
	8,  // 22: service.RateService.Update:output_type -> service.Rate
	2,  // 23: service.RateService.Delete:output_type -> service.RateResult
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_rate_proto_init() }
func file_rate_proto_init() {
	if File_rate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpanFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateCountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rate_proto_goTypes,
		DependencyIndexes: file_rate_proto_depIdxs,
		MessageInfos:      file_rate_proto_msgTypes,
	}.Build()
	File_rate_proto = out.File
	file_rate_proto_rawDesc = nil
	file_rate_proto_goTypes = nil
	file_rate_proto_depIdxs = nil
}
